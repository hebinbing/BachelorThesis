#ifndef MDP_H
#define MDP_H

#include <fstream>

using namespace std;
#define nodeNumber 28
#define iterateValue 10000
class MDP
{
public:
    MDP();

    int startNode=26;
    int goalNode=1;
    double discountFactor=0.99;
    double value[nodeNumber][nodeNumber],preValue[nodeNumber][nodeNumber];
    double reward[nodeNumber][nodeNumber];

    int minimumPath();
    void findPath();


    int edges[nodeNumber][nodeNumber]={
        {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
        {0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0},
        {0,1,1,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0},
        {0,0,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,1,1,0,0,1,1,0,0,0},
        {0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0},
        {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,1,0,1,0},
        {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,0,1,1},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,1},
        {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,1,0,1,1},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0}
    };
    float distances[nodeNumber][nodeNumber]={
        {0,181.108,142.127,160.312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {181.108,0,130.384,0,0,155.242,120.416,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {142.127,130.384,0,122.066,147.648,117.047,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {160.312,0,122.066,0,180.278,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155.242,0},
        {0,0,147.648,180.278,0,98.4886,0,0,0,0,0,0,0,0,0,126.491,0,0,0,126.491,104.403,0,0,190,0,0,158.114,0},
        {0,155.242,117.047,0,98.4886,0,178.885,155.242,0,0,0,170.88,0,0,0,152.643,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,120.416,0,0,0,178.885,0,138.924,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,155.242,138.924,0,164.012,0,0,100.499,165.529,0,0,183.848,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,164.012,0,0,130,0,171.172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,130,100,0,0,156.205,0,0,0,106.301,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,170.88,0,100.499,0,0,0,0,143.178,0,172.047,106.301,0,0,190,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,165.529,171.172,0,156.205,143.178,0,141.421,174.642,0,186.815,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,141.421,0,156.525,0,170,192.094,0,0,0,0,0,0,0,152.971,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,172.047,174.642,156.525,0,193.132,0,82.4621,111.803,0,0,0,0,0,0,187.883,0,0},
        {0,0,0,0,126.491,152.643,0,183.848,0,0,0,106.301,0,0,193.132,0,0,0,144.222,113.137,161.555,0,0,192.094,190.263,0,0,0},
        {0,0,0,0,0,0,0,0,0,130,106.301,0,186.815,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,192.094,82.4621,0,0,0,123.693,0,0,0,0,0,0,150,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,190,0,0,111.803,144.222,0,123.693,0,164.924,0,0,0,0,114.018,0,0,0},
        {0,0,0,0,126.491,0,0,0,0,0,0,0,0,0,0,113.137,0,0,164.924,0,72.8011,0,0,80.6226,130.384,0,172.627,0},
        {0,0,0,0,104.403,0,0,0,0,0,0,0,0,0,0,161.555,0,0,0,72.8011,0,161.555,184.391,94.8683,191.05,0,100.499,155.242},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161.555,0,85.44,182.483,0,0,86.0233,20},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184.391,85.44,0,158.114,0,0,151.327,104.403},
        {0,0,0,0,190,0,0,0,0,0,0,0,0,0,0,192.094,0,0,0,80.6226,94.8683,182.483,158.114,0,117.047,0,164.012,186.815},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190.263,0,0,114.018,130.384,191.05,0,0,117.047,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,152.971,187.883,0,0,150,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,155.242,158.114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172.627,100.499,86.0233,151.327,164.012,0,0,0,70.7107},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155.242,20,104.403,186.815,0,0,70.7107,0}
    };
    float weight[nodeNumber][nodeNumber]={
        {0,37.8799,33.9442,31.5038,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {28.2443,0,27.0228,0,0,34.8704,27.5862,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {22.453,29.2853,0,17.9995,29.5284,29.875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {31.8384,0,21.2173,0,23.0504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24.4526,0},
        {0,0,19.5495,27.8543,0,16.4258,0,0,0,0,0,0,0,0,0,28.3736,0,0,0,33.6868,27.6443,0,0,40.0139,0,0,30.4975,0},
        {0,26.0375,26.7718,0,27.5506,0,24.8613,21.755,0,0,0,27.2586,0,0,0,28.7628,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,18.7812,0,0,0,31.9571,0,32.6443,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,33.4528,31.833,0,26.7182,0,0,18.5318,20.7331,0,0,31.7596,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,36.1059,0,0,24.6469,0,35.8606,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,21.7318,0,0,0,0,0,30.795,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,23.8539,28.8458,0,0,19.8479,0,0,0,21.8276,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,25.422,0,14.8739,0,0,0,0,28.5523,0,38.8169,23.524,0,0,38.8679,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,28.8909,23.7687,0,21.7868,29.8082,0,29.4586,39.4354,0,29.0802,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,31.9888,0,26.7201,0,35.6325,28.6886,0,0,0,0,0,0,0,20.4908,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,34.586,39.7701,32.589,0,33.9003,0,13.078,18.9525,0,0,0,0,0,0,30.7942,0,0},
        {0,0,0,0,26.9612,26.2343,0,24.7543,0,0,0,14.1578,0,0,31.2556,0,0,0,28.6478,31.6356,35.3679,0,0,41.867,38.0733,0,0,0},
        {0,0,0,0,0,0,0,0,0,25.9901,18.1644,0,24.1463,26.6849,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,25.303,16.8505,0,0,0,28.1973,0,0,0,0,0,0,23.9966,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,36.356,0,0,20.2376,33.9846,0,17.6637,0,36.414,0,0,0,0,24.8594,0,0,0},
        {0,0,0,0,18.5693,0,0,0,0,0,0,0,0,0,0,23.2255,0,0,35.6027,0,11.9043,0,0,20.5022,32.9442,0,24.9763,0},
        {0,0,0,0,29.0442,0,0,0,0,0,0,0,0,0,0,35.0333,0,0,0,20.1643,0,23.356,23.4507,17.3605,32.252,0,18.4753,23.2539},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32.7437,0,24.9887,38.4861,0,0,20.036,8.22921},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37.9951,19.5286,0,37.7044,0,0,30.5614,22.2847},
        {0,0,0,0,35.21,0,0,0,0,0,0,0,0,0,0,31.6057,0,0,0,18.5633,25.1439,39.2974,33.4615,0,15.0923,0,37.1866,40.4451},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40.6714,0,0,26.2294,31.8621,37.9803,0,0,26.4403,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,34.1482,34.7501,0,0,28.3603,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,19.7348,26.4403,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32.7249,23.2791,24.0359,34.9933,34.4042,0,0,0,21.1756},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32.0686,15.326,27.5464,39.0608,0,0,18.4952,0}
    };
    double probability[nodeNumber][nodeNumber]={

        {0,50,27,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {50,0,78,0,0,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {27,78,0,100,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {100,0,100,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0},
        {0,0,100,61,0,100,0,0,0,0,0,0,0,0,0,100,0,0,0,100,100,0,0,99,0,0,50,0},
        {0,100,100,0,100,0,100,100,0,0,0,100,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,100,0,0,0,100,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,100,100,0,100,0,0,100,100,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,100,0,0,100,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,100,100,0,0,100,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,100,0,100,0,0,0,0,50,0,56,100,0,0,97,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,100,100,0,100,50,0,50,0,0,100,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,50,0,50,0,100,0,0,0,0,0,0,0,0,50,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,56,0,50,0,97,0,100,100,0,0,0,0,0,0,53,0,0},
        {0,0,0,0,100,100,0,100,0,0,0,100,0,0,97,0,0,0,100,100,100,0,0,97,98,0,0,0},
        {0,0,0,0,0,0,0,0,0,100,100,0,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,100,0,0,0,0,0,0,100,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,97,0,0,100,100,0,100,0,100,0,0,0,0,100,0,0,0},
        {0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,100,0,0,100,0,100,0,0,100,100,0,100,0},
        {0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,100,0,0,0,100,0,100,0,100,98,0,100,100},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,100,50,0,0,100,100},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,44,0,0,100,100},
        {0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,97,0,0,0,100,100,50,44,0,100,0,100,95},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,100,100,98,0,0,100,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,50,53,0,0,100,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,86,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,100,100,100,0,0,0,100},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,100,95,0,0,100,0}
    };
    void optimalValueFunction();
    double minimum();

};

#endif // MDP_H
